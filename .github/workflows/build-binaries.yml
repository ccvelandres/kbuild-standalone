name: Build binaries

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'release tag to build binaries'
        required: false
        default: 'master'
        type: string

jobs:
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Install dependencies
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: libncurses-dev
    
    - name: Checkout build sources
      uses: actions/checkout@v4
      with:
        token: ${{ github.token }}
        ref:  ${{ inputs.ref }}

    - name: Build binary
      run: |
        ls -alR
        make -f Makefile.sample O=build
        chmod +x build/kconfig/conf
        chmod +x build/kconfig/mconf
        tar -czf kbuild-linux-x86_64.tar.gz -C build/kconfig/ conf mconf
        ls -alR
      
    - name: Publish artifacts
      uses: actions/upload-artifact@v4
      with: 
        name: kbuild-linux-x86_64
        path: kbuild-linux-x86_64.tar.gz

  build-win:
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        include:
          - { sys: mingw64, env: amd64, runs-on: 'windows-latest' }
          - { sys: mingw32, env: x86, runs-on: 'windows-latest' }
    defaults:
      run:
        shell: msys2 {0}

    steps:
    - name: Install dependencies
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{matrix.sys}}
        install: >-
          ncurses-devel
          make
          gcc
          base-devel

    - name: Checkout build sources
      uses: actions/checkout@v4
      with:
        token: ${{ github.token }}
        ref:  ${{ inputs.ref }}

    - name: Build binary
      run: make -f Makefile.sample O=build

    - name: Publish artifacts
      uses: actions/upload-artifact@v4
      with: 
        name: kbuild-win-${{matrix.env}}
        path: |
          build\kconfig\conf.exe
          build\kconfig\mconf.exe

  release:
    runs-on: ubuntu-latest
    needs: [ build-linux, build-win ]
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v4

    - name: Package artifacts
      run: |
        for arch in ./kbuild-win-*; do echo pack ${arch}; tar -czf ${arch}.tar.gz -C $arch .; done

    - name: list dir debug
      run: ls -R

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ inputs.ref }}
        files: |
          kbuild-*.tar.gz
          kbuild-*/kbuild-*.tar.gz
      
